@startuml

package N1215\Http\Router {

    abstract class RoutingException {
    }
    note left of RoutingException: exception represents \nrouting failures.

    interface RoutingResultInterface {
        + getHandler(): RequestHandlerInterface;
        + getParams(): array;
    }
    note bottom of RoutingResultInterface: information of successfully matched route

    interface RouterInterface {
        + match(ServerRequestInterface $request): RoutingResultInterface
    }
    note left of RouterInterface: receives PSR-7 server request \n and returns routing result.

    Psr\Http\Message.ServerRequestInterface --> RouterInterface: input
    RouterInterface -> RoutingResultInterface: output
    RouterInterface --> RoutingException: throws

    Psr\Http\Server.RequestHandlerInterface --o RoutingResultInterface
}

namespace Psr\Http\Message {
    interface ServerRequestInterface
    note top of ServerRequestInterface: PSR-7 server request
    interface ResponseInterface
    note top of ResponseInterface: PSR-7 response
}

namespace Psr\Http\Server {
    interface RequestHandlerInterface {
        + handle(ServerRequestInterface $request): ResponseInterface
    }
    note top of RequestHandlerInterface: PSR-15 server request handler

    Psr\Http\Message.ServerRequestInterface -> RequestHandlerInterface: input
    RequestHandlerInterface -> Psr\Http\Message.ResponseInterface: output
}

@enduml