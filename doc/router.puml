@startuml

package N1215\Http\Router {

    interface RoutingErrorInterface {
        + getStatusCode(): int
        + getMessage(): string
    }
    note bottom of RoutingErrorInterface: Error like "route not found",\n "method not allowed", and so on.

    interface RoutingResultInterface {
        + isSuccess(): bool;
        + getMatchedHandler(): ?RequestHandlerInterface;
        + getMatchedParams(): array;
        + getError(): ?RoutingErrorInterface;
    }
    note bottom of RoutingResultInterface: Holds whether routing is success or failure,\n matched params and a RequestHandler

    interface RouterInterface {
        + match(ServerRequestInterface $request): RoutingResultInterface
    }
    note bottom of RouterInterface: receives PSR-7 server request \n and returns routing result.

    Psr\Http\Message.ServerRequestInterface --> RouterInterface: input
    RouterInterface -> RoutingResultInterface: output

    RoutingResultInterface o- RoutingErrorInterface: 1   0..1


    Psr\Http\Server.RequestHandlerInterface --o RoutingResultInterface
}

namespace Psr\Http\Message {
    interface ServerRequestInterface
    note top of ServerRequestInterface: PSR-7 server request
    interface ResponseInterface
    note top of ResponseInterface: PSR-7 response
}

namespace Psr\Http\Server {
    interface RequestHandlerInterface {
        + handle(ServerRequestInterface $request): ResponseInterface
    }
    note top of RequestHandlerInterface: PSR-15 server request handler

    Psr\Http\Message.ServerRequestInterface -> RequestHandlerInterface: input
    RequestHandlerInterface -> Psr\Http\Message.ResponseInterface: output
}

@enduml